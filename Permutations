

import java.io.*;
import java.util.*;

/**
* Generate all permutations of the numbers 0 to n-1
*
* Input Format
* n
*
* Constraints
* 1 < n < 10
*
* @author Briona Davis
*/

public class Permutations {

    public static void main(String[] args) {
       
   Scanner scr= new Scanner(System.in);
        int a=scr.nextInt();
        perm(a);
        scr.close(); 
    }
        
        public static void perm(int n){
        int[]perm= new int[n]; 
        int[]perm2= new int[n];
        int[]direction= new int[n];
        
        for(int i=0; i<n; i++){
            perm[i]=i;
            perm2[i]=i;
            direction[i]=-1;
                
        }
            perm(0, perm, perm2, direction);
        }
    
    
    public static void perm(int n, int []perm, int[]perm2, int[]direction){
        if(n>=perm.length){
            for(int i=0; i<perm.length; i++){
                System.out.print(perm[i]);
               
            }
            System.out.println();
        }else{
            
        
            perm(n+1, perm, perm2, direction);
        
            
            for(int j=0; j<n; j++){ //switch
              //  System.out.println();
                
                
                int a= perm[perm2[n]+direction[n]];
                perm[perm2[n]]=a;
                perm[perm2[n]+direction[n]]=n;
                perm2[a]=perm2[n];
                perm2[n]=perm2[n]+direction[n];
                
                
                
                perm(n+1, perm, perm2, direction);
                
                
            }
            direction[n]=-direction[n];
        
    }
    }
    
    
    
   
}
